# Script to create missing README.md files in all subdirectories
# Also updates existing READMEs to include links to all Markdown files and subdirectories

# Configuration
$docsDir = "D:\Dev\repos\mywienerlinien\.windsurf\docs"
$excludeFiles = @("_sidebar.md", "README.md", ".DS_Store", "Thumbs.db")
$excludeDirs = @(".git", "node_modules", "_assets", "_media", "_static", "plugins", "css", "js", "img", "images")

# Function to format a title from a filename
function Format-Title {
    param ([string]$text)
    # Remove date prefix if exists (YYYY-MM-DD_)
    $text = $text -replace '^\d{4}-\d{2}-\d{2}_', ''
    # Convert snake_case and kebab-case to Title Case
    $text = $text -replace '[_-]', ' ' -replace '\b(\p{Ll})', { $_.Value.ToUpper() }
    return $text.Trim()
}

# Function to create or update README.md
function Update-Readme {
    param (
        [string]$directory,
        [switch]$Force = $false
    )
    
    $readmePath = Join-Path -Path $directory -ChildPath "README.md"
    $dirName = (Get-Item $directory).Name -replace '_', ' '
    $title = Format-Title $dirName
    
    # Get all markdown files in the directory (excluding excluded files)
    $markdownFiles = Get-ChildItem -Path $directory -File -Filter "*.md" | 
        Where-Object { $excludeFiles -notcontains $_.Name }
    
    # Get all subdirectories (excluding excluded directories)
    $subDirs = Get-ChildItem -Path $directory -Directory | 
        Where-Object { $excludeDirs -notcontains $_.Name }
    
    # Generate markdown content
    $content = @("# $title\n")
    
    # Add description
    $description = "files and subdirectories related to $($dirName.ToLower())"
    $content += "This directory contains $description.\n"
    
    # Add table of contents
    $content += "\n## Contents\n"
    $content += "<!-- toc -->\n"
    
    # Add files section if there are markdown files
    if ($markdownFiles.Count -gt 0) {
        $content += "\n### Files\n"
        foreach ($file in $markdownFiles | Sort-Object Name) {
            $fileTitle = Format-Title ([System.IO.Path]::GetFileNameWithoutExtension($file.Name))
            $relativePath = "./$($file.Name)"
            $content += "- [$fileTitle]($relativePath)\n"
        }
    }
    
    # Add subdirectories section if there are subdirectories
    if ($subDirs.Count -gt 0) {
        $content += "\n### Subdirectories\n"
        foreach ($dir in $subDirs | Sort-Object Name) {
            $dirTitle = Format-Title $dir.Name
            $relativePath = "./$($dir.Name)/"
            $content += "- [$dirTitle]($relativePath)\n"
        }
    }
    
    # Add navigation section
    $content += @"

## Navigation

- [Parent Directory](../)
- [Documentation Home](../../)

## Last Updated

$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')

*This file was automatically generated by the update_readmes.ps1 script.*
"@

    # Check if we need to update the file
    $shouldUpdate = $Force
    if (-not $Force -and (Test-Path -Path $readmePath)) {
        $existingContent = Get-Content -Path $readmePath -Raw
        $shouldUpdate = $existingContent -notmatch "This file was automatically generated"
        if (-not $shouldUpdate) {
            Write-Host "Skipping (already generated): $readmePath" -ForegroundColor DarkGray
            return
        }
    }
    
    # Write the content to the README file
    $content | Out-File -FilePath $readmePath -Encoding utf8 -NoNewline
    
    if (Test-Path -Path $readmePath) {
        Write-Host "Updated: $readmePath" -ForegroundColor Green
    } else {
        Write-Host "Created: $readmePath" -ForegroundColor Green
    }
}

# Get all directories under docs (including the root)
$directories = @(Get-Item -Path $docsDir)
$directories += Get-ChildItem -Path $docsDir -Directory -Recurse | 
    Where-Object { 
        $shouldInclude = $true
        foreach ($exclude in $excludeDirs) {
            if ($_.FullName -like "*\$exclude" -or $_.FullName -like "*\$exclude\*") {
                $shouldInclude = $false
                break
            }
        }
        $shouldInclude
    }

# Process each directory
foreach ($dir in $directories) {
    Update-Readme -directory $dir.FullName -Force:$false
}

Write-Host "\nAll README.md files have been processed." -ForegroundColor Green
